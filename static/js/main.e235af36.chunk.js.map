{"version":3,"sources":["types/SortType.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["SortType","TodoList","props","todos","onTodoUserId","modalStatus","onModalStatus","onSelectedTodo","selectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","userId","handleClickSelectButton","TodoFilter","query","status","onChangeQuery","onChangeStatus","value","onChange","event","target","all","active","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","todoUserId","useEffect","loadedUser","href","email","name","App","setTodos","todoLoadStatus","setTodoLoadStatus","selectedTodoUserId","setSelectedTodoUserId","setModalStatus","setSelectedTodo","filterByStatus","setFilterByStatus","setQuery","loadedTodos","filter","includesQuery","toLocaleLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e235af36.chunk.js","sourcesContent":["export enum SortType {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onTodoUserId: (todoUserId: number | null) => void,\n  modalStatus: boolean,\n  onModalStatus: (modalStatus: boolean) => void,\n  onSelectedTodo: (selectedTodo: Todo | null) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const {\n    todos,\n    onTodoUserId,\n    modalStatus,\n    onModalStatus,\n    onSelectedTodo,\n    selectedTodo,\n  } = props;\n\n  const handleClickSelectButton = (todo: Todo) => {\n    onTodoUserId(todo.userId);\n    onModalStatus(!modalStatus);\n    onSelectedTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={classNames(\n              {\n                'has-background-info-light': selectedTodo?.id === todo.id,\n              },\n            )}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  handleClickSelectButton(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={\n                    selectedTodo?.id === todo.id\n                      ? 'far fa-eye-slash'\n                      : 'far fa-eye'\n                  }\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { SortType } from '../../types/SortType';\n\ntype Props = {\n  query: string,\n  onChangeQuery: (query: string) => void,\n  status: string,\n  onChangeStatus: (status: SortType) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = (props) => {\n  const {\n    query,\n    status,\n    onChangeQuery,\n    onChangeStatus,\n  } = props;\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={event => onChangeStatus(event.target.value as SortType)}\n          >\n            <option value={SortType.all}>All</option>\n            <option value={SortType.active}>Active</option>\n            <option value={SortType.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => onChangeQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onChangeQuery('')}\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number | null) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todoUserId: number | null,\n  modalStatus: boolean,\n  onModalStatus: (modalStatus: boolean) => void,\n  selectedTodo: Todo | null,\n  onSelectedTodo: (selectedTodo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = (props) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const {\n    todoUserId,\n    modalStatus,\n    onModalStatus,\n    selectedTodo,\n    onSelectedTodo,\n  } = props;\n\n  useEffect(() => {\n    getUser(todoUserId)\n      .then(loadedUser => {\n        setUser(loadedUser);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {selectedTodo && user\n        ? (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  onModalStatus(!modalStatus);\n                  onSelectedTodo(null);\n                }}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo.completed\n                  ? (\n                    <strong className=\"has-text-success\">Done</strong>\n                  ) : (\n                    <strong className=\"has-text-danger\">Planned</strong>\n                  )}\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        ) : (\n          <Loader />\n        )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { SortType } from './types/SortType';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoLoadStatus, setTodoLoadStatus] = useState(true);\n  const [selectedTodoUserId, setSelectedTodoUserId]\n  = useState<number | null>(null);\n  const [modalStatus, setModalStatus] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterByStatus, setFilterByStatus] = useState(SortType.all);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(loadedTodos => {\n        setTodos(loadedTodos);\n        setTodoLoadStatus(false);\n      });\n  }, []);\n\n  const getFilteredTodos = () => {\n    return todos.filter(todo => {\n      const includesQuery = todo.title.toLocaleLowerCase()\n        .includes(query.toLocaleLowerCase());\n\n      switch (filterByStatus) {\n        case 'active':\n          return !todo.completed && includesQuery;\n\n        case 'completed':\n          return todo.completed && includesQuery;\n\n        case 'all':\n        default:\n          return includesQuery;\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onChangeQuery={setQuery}\n                status={filterByStatus}\n                onChangeStatus={setFilterByStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todoLoadStatus\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={getFilteredTodos()}\n                    onTodoUserId={setSelectedTodoUserId}\n                    modalStatus={modalStatus}\n                    onModalStatus={setModalStatus}\n                    onSelectedTodo={setSelectedTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {modalStatus && (\n        <TodoModal\n          todoUserId={selectedTodoUserId}\n          modalStatus={modalStatus}\n          onModalStatus={setModalStatus}\n          selectedTodo={selectedTodo}\n          onSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}